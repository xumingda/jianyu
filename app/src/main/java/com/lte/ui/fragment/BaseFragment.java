package com.lte.ui.fragment;import android.annotation.TargetApi;import android.bluetooth.BluetoothAdapter;import android.bluetooth.BluetoothDevice;import android.bluetooth.BluetoothSocket;import android.content.Intent;import android.os.Build;import android.util.Log;import android.widget.Toast;import com.lte.R;import com.lte.ui.activity.ActDiscovery;import com.lte.utils.Sysinfo;import java.io.IOException;import java.io.InputStream;import java.io.OutputStream;import java.util.UUID;import me.yokeyword.fragmentation.SupportFragment;/** * Created by admin on 13-11-23. */@TargetApi(Build.VERSION_CODES.HONEYCOMB)public abstract class BaseFragment extends SupportFragment {    protected static final byte IO_MODE_CHAR = 0;    protected static final byte IO_MODE_HEX = 1;    protected static final byte REQUEST_DISCOVERY = 1;    protected static final byte REQUEST_ENABLE = 2;    protected static final byte REQUEST_KEYBOARD = 3;    public static boolean mbConectOk = false;    public static BluetoothSocket mbsSocket = null;    public static InputStream misIn = null;    public static OutputStream mosOut = null;    public static byte mInputMode;    public static byte mOutputMode;    protected String msBluetoothMAC;    private String TAG = "BaseCommonActivity";    public BaseFragment()    {        msBluetoothMAC = null;        mInputMode = 0;        mOutputMode = 0;    }    protected final void InitLoad()    {        mInputMode = (byte)getIntData("InputMode");        mOutputMode = (byte)getIntData("OutputMode");        msBluetoothMAC = getStrData("BluetoothMAC");    }    protected int ReceiveData(byte bytebuf[])    {        if (!mbConectOk)            return -2;        try        {            return misIn.read(bytebuf);        }        catch (IOException ioexception)        {            terminateConnect();            return -3;        }    }    protected int SendData(byte bytebuf[])    {        int bytelength;        if (mbConectOk)        {            try            {                Log.i(TAG, "-----SendData-----"+bytebuf);                mosOut.write(bytebuf);                bytelength = bytebuf.length;            }            catch (IOException ioexception)            {                terminateConnect();                bytelength = -3;            }        }        else            bytelength = -2;        return bytelength;    }    protected boolean createBluetoothConnect()    {        BluetoothDevice bluetoothdevice;        if (mbConectOk)        {            try {                misIn.close();                mosOut.close();                mbsSocket.close();            } catch (IOException ioexception1) {                misIn = null;                mosOut = null;                mbsSocket = null;                mbConectOk = false;            }        }        try {            bluetoothdevice = BluetoothAdapter.getDefaultAdapter().getRemoteDevice(msBluetoothMAC);            mbsSocket = bluetoothdevice.createRfcommSocketToServiceRecord(UUID.fromString("00001101-0000-1000-8000-00805F9B34FB"));            mbsSocket.connect();            saveData("BluetoothMAC", msBluetoothMAC);            mosOut = mbsSocket.getOutputStream();            misIn = mbsSocket.getInputStream();            mbConectOk = true;            return true;        } catch (IOException ioexception) {            msBluetoothMAC = null;            saveData("BluetoothMAC", ((String) (null)));            mbConectOk = false;            return false;        }//		}    }    protected int getIntData(String s)    {        return getActivity().getSharedPreferences((new Sysinfo(getActivity())).getPackageName(), 0).getInt(s, 0);    }    protected String getStrData(String s)    {        return getActivity().getSharedPreferences((new Sysinfo(getActivity())).getPackageName(), 0).getString(s, null);    }    protected boolean isConnect()    {        return mbConectOk;    }    protected void openButetooth()    {        Intent intent = new Intent("android.bluetooth.adapter.action.REQUEST_ENABLE");        Toast.makeText(getActivity(), getString(R.string.msg_actDiscovery_Bluetooth_Open_Fail), Toast.LENGTH_SHORT).show();        startActivityForResult(intent, 2);    }    protected String readBluetoothMAC()    {        return getActivity().getSharedPreferences((new Sysinfo(getActivity())).getPackageName(), 0).getString("BluetoothMAC", null);    }    protected void saveBluetoothMAC(String s)    {        android.content.SharedPreferences.Editor editor = getActivity().getSharedPreferences((new Sysinfo(getActivity())).getPackageName(), 0).edit();        editor.putString("BluetoothMAC", s);        editor.commit();    }    protected void saveData(String s, int i)    {        android.content.SharedPreferences.Editor editor = getActivity().getSharedPreferences((new Sysinfo(getActivity())).getPackageName(), 0).edit();        editor.putInt(s, i);        editor.commit();    }    protected void saveData(String s, String s1)    {        android.content.SharedPreferences.Editor editor = getActivity().getSharedPreferences((new Sysinfo(getActivity())).getPackageName(), 0).edit();        editor.putString(s, s1);        editor.commit();    }    protected void showBluetootchDiscovery()    {        Intent intent = new Intent(getActivity(), ActDiscovery.class);        Toast.makeText(getActivity(), getString(R.string.msg_actDiscovery_select_device), Toast.LENGTH_SHORT).show();        startActivityForResult(intent, 1);    }    protected void terminateConnect()    {        Log.i(TAG, "-----terminateConnect-----");        if (mbConectOk)        {            try            {                mbConectOk = false;                mbsSocket.close();                misIn.close();                mosOut.close();            }            catch (IOException localIOException)            {                misIn = null;                mosOut = null;                mbsSocket = null;            }        }    }}